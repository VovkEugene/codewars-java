package kyu7;

import static java.util.Arrays.stream;

/**
 * ¬ыигрывает тот, кто получит наибольшую прибыль!
 * ----------------------------------------------
 * »стори€:
 * ” Ѕена есть очень проста€ иде€, как получить некоторую прибыль:
 * он покупает что-то и снова продает.
 *  онечно, это не принесло бы ему никакой прибыли,
 * если бы он просто покупал и продавал это по одной и той же цене.
 * ¬место этого он собираетс€ купить его по как можно более низкой цене и продать по самой высокой.
 * ----------------------------------------------
 * «адача:
 * Ќапишите функцию, котора€ возвращает как минимальное, так и максимальное число
 * из заданного списка/массива.
 * ----------------------------------------------
 * Examples (Input --> Output)
 * [1,2,3,4,5] --> [1,5]
 * [2334454,5] --> [5,2334454]
 * [1]         --> [1,1]
 * ----------------------------------------------
 * «амечани€:
 * ¬се массивы или списки всегда будут содержать хот€ бы один элемент,
 * поэтому вам не нужно провер€ть длину.
 *  роме того, ваша функци€ всегда будет получать массив или список,
 * вам не нужно провер€ть наличие null, undefined или подобных элементов.
 */
public class TheHighestProfitWins {
    public static int[] minMax(int[] arr) {
        return new int[]{min(arr), max(arr)};
    }

    private static int min(int[] array) {
        return stream(array).min().orElse(0);
    }

    private static int max(int[] array) {
        return stream(array).max().orElse(0);
    }
}
